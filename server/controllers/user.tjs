var db = require(global.DIR_SERVER + '/db.tjs');

function getCollection(callback) {
  var client, users, e;

  await {
    db.client(defer(client));
  }
  await {
    client.collection('users', defer(e, users));
  }

  callback(users, client); 
}

function validatePhone(phone) {
}

function defaults(defaults, given) {
  var ob = {};

  for (var i in defaults) {
    if (given[i]) {
      ob[i] = given[i];
    }
    else if (defaults[i] !== null) {
      ob[i] = defaults[i];
    }
  }

  return ob;
}

exports.index = function (options, callback) {
 callback('user stuff'); 
};

exports.create = function (options, callback) {
  var client, users, finder, count, errorType;

  var user = defaults({
    email: '',
    phone: 0,
    name: 'Specter'
  }, options);;

  // format some data
  if (user.phone) {
    user.phone = parseInt(user.phone, 10);
  }

  // user creation requires email or phone
  if (!user.email && !user.phone) {
    return callback({e: 1, msg: 'Please specify an email or phone.'});
  }

  await {
    getCollection(defer(users, client));
  }

  if (user.email) {
    finder = users.find({email: user.email});
    errorType = 'email';
  }
  else {
    finder = users.find({phone: user.phone});
    errorType = 'phone';
  }
 
  await {
    finder.count(defer(e, count));
  } 

  if (count > 0) {
    client.close();
    return callback({e: 2, msg: 'There is already a user with that ' + errorType + '.'});
  }

  await {
    users.insert(user, defer(e, stuff));
  } 

  console.log(e, stuff)

  client.close();
  return callback({e: 0, msg: 'Success'});
};

exports.get = function (options, callback) {
  var user = defaults({
    _id: null,
    email: null,
    phone: null 
  }, options);

  if (!user._id && !user.email && !user.phone) {
    return callback({e:1, msg: 'You must specify an index.'});
  } 

  var client, users, e, list;

  await {
    getCollection(defer(users, client));
  }
  await {
    users.find(user).toArray(defer(e, list));
  }

  if (list.length) {
    callback({e: 0, user: list[0]});
  }
  else {
    callback({e: 2, msg: 'No user found'});
  }

  client.close();
};

